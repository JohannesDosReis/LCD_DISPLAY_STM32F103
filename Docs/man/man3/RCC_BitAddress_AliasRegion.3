.TH "RCC_BitAddress_AliasRegion" 3 "Thu Oct 29 2020" "lcd_display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RCC_BitAddress_AliasRegion \- RCC registers bit address in the alias region\&.  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRCC_CR_OFFSET_BB\fP   (\fBRCC_OFFSET\fP + \fBRCC_CR_OFFSET\fP)"
.br
.ti -1c
.RI "#define \fBRCC_CFGR_OFFSET_BB\fP   (\fBRCC_OFFSET\fP + \fBRCC_CFGR_OFFSET\fP)"
.br
.ti -1c
.RI "#define \fBRCC_CIR_OFFSET_BB\fP   (\fBRCC_OFFSET\fP + \fBRCC_CIR_OFFSET\fP)"
.br
.ti -1c
.RI "#define \fBRCC_BDCR_OFFSET_BB\fP   (\fBRCC_OFFSET\fP + \fBRCC_BDCR_OFFSET\fP)"
.br
.ti -1c
.RI "#define \fBRCC_CSR_OFFSET_BB\fP   (\fBRCC_OFFSET\fP + \fBRCC_CSR_OFFSET\fP)"
.br
.ti -1c
.RI "#define \fBRCC_HSION_BIT_NUMBER\fP   \fBRCC_CR_HSION_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_CR_HSION_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_HSION_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_HSEON_BIT_NUMBER\fP   \fBRCC_CR_HSEON_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_CR_HSEON_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_HSEON_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_CSSON_BIT_NUMBER\fP   \fBRCC_CR_CSSON_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_CR_CSSON_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_CSSON_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_PLLON_BIT_NUMBER\fP   \fBRCC_CR_PLLON_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_CR_PLLON_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_PLLON_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_LSION_BIT_NUMBER\fP   \fBRCC_CSR_LSION_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_CSR_LSION_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CSR_OFFSET_BB\fP * 32U) + (\fBRCC_LSION_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_RMVF_BIT_NUMBER\fP   \fBRCC_CSR_RMVF_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_CSR_RMVF_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CSR_OFFSET_BB\fP * 32U) + (\fBRCC_RMVF_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_LSEON_BIT_NUMBER\fP   \fBRCC_BDCR_LSEON_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_BDCR_LSEON_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_LSEON_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_LSEBYP_BIT_NUMBER\fP   \fBRCC_BDCR_LSEBYP_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_BDCR_LSEBYP_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_LSEBYP_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_RTCEN_BIT_NUMBER\fP   \fBRCC_BDCR_RTCEN_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_BDCR_RTCEN_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_RTCEN_BIT_NUMBER\fP * 4U)))"
.br
.ti -1c
.RI "#define \fBRCC_BDRST_BIT_NUMBER\fP   \fBRCC_BDCR_BDRST_Pos\fP"
.br
.ti -1c
.RI "#define \fBRCC_BDCR_BDRST_BB\fP   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_BDRST_BIT_NUMBER\fP * 4U)))"
.br
.in -1c
.SH "Detailed Description"
.PP 
RCC registers bit address in the alias region\&. 


.SH "Macro Definition Documentation"
.PP 
.SS "#define RCC_BDCR_BDRST_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_BDRST_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_BDCR_LSEBYP_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_LSEBYP_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_BDCR_LSEON_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_LSEON_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_BDCR_OFFSET_BB   (\fBRCC_OFFSET\fP + \fBRCC_BDCR_OFFSET\fP)"

.SS "#define RCC_BDCR_RTCEN_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_BDCR_OFFSET_BB\fP * 32U) + (\fBRCC_RTCEN_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_BDRST_BIT_NUMBER   \fBRCC_BDCR_BDRST_Pos\fP"

.SS "#define RCC_CFGR_OFFSET_BB   (\fBRCC_OFFSET\fP + \fBRCC_CFGR_OFFSET\fP)"

.SS "#define RCC_CIR_OFFSET_BB   (\fBRCC_OFFSET\fP + \fBRCC_CIR_OFFSET\fP)"

.SS "#define RCC_CR_CSSON_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_CSSON_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_CR_HSEON_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_HSEON_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_CR_HSION_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_HSION_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_CR_OFFSET_BB   (\fBRCC_OFFSET\fP + \fBRCC_CR_OFFSET\fP)"

.SS "#define RCC_CR_PLLON_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CR_OFFSET_BB\fP * 32U) + (\fBRCC_PLLON_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_CSR_LSION_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CSR_OFFSET_BB\fP * 32U) + (\fBRCC_LSION_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_CSR_OFFSET_BB   (\fBRCC_OFFSET\fP + \fBRCC_CSR_OFFSET\fP)"

.SS "#define RCC_CSR_RMVF_BB   ((uint32_t)(\fBPERIPH_BB_BASE\fP + (\fBRCC_CSR_OFFSET_BB\fP * 32U) + (\fBRCC_RMVF_BIT_NUMBER\fP * 4U)))"

.SS "#define RCC_CSSON_BIT_NUMBER   \fBRCC_CR_CSSON_Pos\fP"

.SS "#define RCC_HSEON_BIT_NUMBER   \fBRCC_CR_HSEON_Pos\fP"

.SS "#define RCC_HSION_BIT_NUMBER   \fBRCC_CR_HSION_Pos\fP"

.SS "#define RCC_LSEBYP_BIT_NUMBER   \fBRCC_BDCR_LSEBYP_Pos\fP"

.SS "#define RCC_LSEON_BIT_NUMBER   \fBRCC_BDCR_LSEON_Pos\fP"

.SS "#define RCC_LSION_BIT_NUMBER   \fBRCC_CSR_LSION_Pos\fP"

.SS "#define RCC_PLLON_BIT_NUMBER   \fBRCC_CR_PLLON_Pos\fP"

.SS "#define RCC_RMVF_BIT_NUMBER   \fBRCC_CSR_RMVF_Pos\fP"

.SS "#define RCC_RTCEN_BIT_NUMBER   \fBRCC_BDCR_RTCEN_Pos\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for lcd_display from the source code\&.
