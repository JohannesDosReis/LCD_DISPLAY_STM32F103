.TH "RCC_RTC_Clock_Configuration" 3 "Thu Oct 29 2020" "lcd_display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RCC_RTC_Clock_Configuration
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__HAL_RCC_RTC_CONFIG\fP(__RTC_CLKSOURCE__)   \fBMODIFY_REG\fP(\fBRCC\fP\->BDCR, \fBRCC_BDCR_RTCSEL\fP, (__RTC_CLKSOURCE__))"
.br
.RI "Macro to configure the RTC clock (RTCCLK)\&. "
.ti -1c
.RI "#define \fB__HAL_RCC_GET_RTC_SOURCE\fP()   (\fBREAD_BIT\fP(\fBRCC\fP\->BDCR, \fBRCC_BDCR_RTCSEL\fP))"
.br
.RI "Macro to get the RTC clock source\&. "
.ti -1c
.RI "#define \fB__HAL_RCC_RTC_ENABLE\fP()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_RTCEN_BB\fP = \fBENABLE\fP)"
.br
.RI "Macro to enable the the RTC clock\&. "
.ti -1c
.RI "#define \fB__HAL_RCC_RTC_DISABLE\fP()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_RTCEN_BB\fP = \fBDISABLE\fP)"
.br
.RI "Macro to disable the the RTC clock\&. "
.ti -1c
.RI "#define \fB__HAL_RCC_BACKUPRESET_FORCE\fP()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_BDRST_BB\fP = \fBENABLE\fP)"
.br
.RI "Macro to force the Backup domain reset\&. "
.ti -1c
.RI "#define \fB__HAL_RCC_BACKUPRESET_RELEASE\fP()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_BDRST_BB\fP = \fBDISABLE\fP)"
.br
.RI "Macros to release the Backup domain reset\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define __HAL_RCC_BACKUPRESET_FORCE()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_BDRST_BB\fP = \fBENABLE\fP)"

.PP
Macro to force the Backup domain reset\&. 
.PP
\fBNote\fP
.RS 4
This function resets the RTC peripheral (including the backup registers) and the RTC clock source selection in RCC_BDCR register\&. 
.RE
.PP

.SS "#define __HAL_RCC_BACKUPRESET_RELEASE()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_BDRST_BB\fP = \fBDISABLE\fP)"

.PP
Macros to release the Backup domain reset\&. 
.SS "#define __HAL_RCC_GET_RTC_SOURCE()   (\fBREAD_BIT\fP(\fBRCC\fP\->BDCR, \fBRCC_BDCR_RTCSEL\fP))"

.PP
Macro to get the RTC clock source\&. 
.PP
\fBReturn values\fP
.RS 4
\fIThe\fP clock source can be one of the following values: 
.PD 0

.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_NO_CLK\fP No clock selected as RTC clock 
.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_LSE\fP LSE selected as RTC clock 
.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_LSI\fP LSI selected as RTC clock 
.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_HSE_DIV128\fP HSE divided by 128 selected as RTC clock 
.PP
.RE
.PP

.SS "#define __HAL_RCC_RTC_CONFIG(__RTC_CLKSOURCE__)   \fBMODIFY_REG\fP(\fBRCC\fP\->BDCR, \fBRCC_BDCR_RTCSEL\fP, (__RTC_CLKSOURCE__))"

.PP
Macro to configure the RTC clock (RTCCLK)\&. 
.PP
\fBNote\fP
.RS 4
As the RTC clock configuration bits are in the Backup domain and write access is denied to this domain after reset, you have to enable write access using the Power Backup Access macro before to configure the RTC clock source (to be done once after reset)\&. 
.PP
Once the RTC clock is configured it can't be changed unless the Backup domain is reset using \fB__HAL_RCC_BACKUPRESET_FORCE()\fP macro, or by a Power On Reset (POR)\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fI<strong>RTC_CLKSOURCE</strong>\fP specifies the RTC clock source\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_NO_CLK\fP No clock selected as RTC clock 
.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_LSE\fP LSE selected as RTC clock 
.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_LSI\fP LSI selected as RTC clock 
.IP "\(bu" 2
\fBRCC_RTCCLKSOURCE_HSE_DIV128\fP HSE divided by 128 selected as RTC clock 
.PP
.RE
.PP
\fBNote\fP
.RS 4
If the LSE or LSI is used as RTC clock source, the RTC continues to work in STOP and STANDBY modes, and can be used as wakeup source\&. However, when the HSE clock is used as RTC clock source, the RTC cannot be used in STOP and STANDBY modes\&. 
.PP
The maximum input clock frequency for RTC is 1MHz (when using HSE as RTC clock source)\&. 
.RE
.PP

.SS "#define __HAL_RCC_RTC_DISABLE()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_RTCEN_BB\fP = \fBDISABLE\fP)"

.PP
Macro to disable the the RTC clock\&. 
.PP
\fBNote\fP
.RS 4
These macros must be used only after the RTC clock source was selected\&. 
.RE
.PP

.SS "#define __HAL_RCC_RTC_ENABLE()   (*(\fB__IO\fP uint32_t *) \fBRCC_BDCR_RTCEN_BB\fP = \fBENABLE\fP)"

.PP
Macro to enable the the RTC clock\&. 
.PP
\fBNote\fP
.RS 4
These macros must be used only after the RTC clock source was selected\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for lcd_display from the source code\&.
