.TH "Core/Inc/stm32f1xx_hal_conf.h" 3 "Thu Oct 29 2020" "lcd_display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Core/Inc/stm32f1xx_hal_conf.h \- HAL configuration file\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f1xx_hal_rcc\&.h'\fP
.br
\fC#include 'stm32f1xx_hal_gpio\&.h'\fP
.br
\fC#include 'stm32f1xx_hal_exti\&.h'\fP
.br
\fC#include 'stm32f1xx_hal_dma\&.h'\fP
.br
\fC#include 'stm32f1xx_hal_cortex\&.h'\fP
.br
\fC#include 'stm32f1xx_hal_flash\&.h'\fP
.br
\fC#include 'stm32f1xx_hal_pwr\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBHAL_MODULE_ENABLED\fP"
.br
.RI "This is the list of modules to be used in the HAL driver\&. "
.ti -1c
.RI "#define \fBHAL_GPIO_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHAL_CORTEX_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHAL_DMA_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHAL_FLASH_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHAL_EXTI_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHAL_GPIO_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHAL_PWR_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHAL_RCC_MODULE_ENABLED\fP"
.br
.ti -1c
.RI "#define \fBHSE_VALUE\fP   8000000U"
.br
.RI "Adjust the value of External High Speed oscillator (HSE) used in your application\&. This value is used by the RCC HAL module to compute the system frequency (when HSE is used as system clock source, directly or through the PLL)\&. "
.ti -1c
.RI "#define \fBHSE_STARTUP_TIMEOUT\fP   100U"
.br
.ti -1c
.RI "#define \fBHSI_VALUE\fP   8000000U"
.br
.RI "Internal High Speed oscillator (HSI) value\&. This value is used by the RCC HAL module to compute the system frequency (when HSI is used as system clock source, directly or through the PLL)\&. "
.ti -1c
.RI "#define \fBLSI_VALUE\fP   40000U"
.br
.RI "Internal Low Speed oscillator (LSI) value\&. "
.ti -1c
.RI "#define \fBLSE_VALUE\fP   32768U"
.br
.RI "External Low Speed oscillator (LSE) value\&. This value is used by the UART, RTC HAL module to compute the system frequency\&. "
.ti -1c
.RI "#define \fBLSE_STARTUP_TIMEOUT\fP   5000U"
.br
.ti -1c
.RI "#define \fBVDD_VALUE\fP   3300U"
.br
.RI "This is the HAL system configuration section\&. "
.ti -1c
.RI "#define \fBTICK_INT_PRIORITY\fP   0U"
.br
.ti -1c
.RI "#define \fBUSE_RTOS\fP   0U"
.br
.ti -1c
.RI "#define \fBPREFETCH_ENABLE\fP   1U"
.br
.ti -1c
.RI "#define \fBUSE_HAL_ADC_REGISTER_CALLBACKS\fP   0U /* ADC register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_CAN_REGISTER_CALLBACKS\fP   0U /* CAN register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_CEC_REGISTER_CALLBACKS\fP   0U /* CEC register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_DAC_REGISTER_CALLBACKS\fP   0U /* DAC register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_ETH_REGISTER_CALLBACKS\fP   0U /* ETH register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_HCD_REGISTER_CALLBACKS\fP   0U /* HCD register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_I2C_REGISTER_CALLBACKS\fP   0U /* I2C register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_I2S_REGISTER_CALLBACKS\fP   0U /* I2S register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_MMC_REGISTER_CALLBACKS\fP   0U /* MMC register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_NAND_REGISTER_CALLBACKS\fP   0U /* NAND register callback disabled      */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_NOR_REGISTER_CALLBACKS\fP   0U /* NOR register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_PCCARD_REGISTER_CALLBACKS\fP   0U /* PCCARD register callback disabled    */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_PCD_REGISTER_CALLBACKS\fP   0U /* PCD register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_RTC_REGISTER_CALLBACKS\fP   0U /* \fBRTC\fP register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_SD_REGISTER_CALLBACKS\fP   0U /* SD register callback disabled        */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_SMARTCARD_REGISTER_CALLBACKS\fP   0U /* SMARTCARD register callback disabled */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_IRDA_REGISTER_CALLBACKS\fP   0U /* IRDA register callback disabled      */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_SRAM_REGISTER_CALLBACKS\fP   0U /* SRAM register callback disabled      */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_SPI_REGISTER_CALLBACKS\fP   0U /* SPI register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_TIM_REGISTER_CALLBACKS\fP   0U /* TIM register callback disabled       */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_UART_REGISTER_CALLBACKS\fP   0U /* UART register callback disabled      */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_USART_REGISTER_CALLBACKS\fP   0U /* USART register callback disabled     */"
.br
.ti -1c
.RI "#define \fBUSE_HAL_WWDG_REGISTER_CALLBACKS\fP   0U /* \fBWWDG\fP register callback disabled      */"
.br
.ti -1c
.RI "#define \fBMAC_ADDR0\fP   2U"
.br
.RI "Uncomment the line below to expanse the 'assert_param' macro in the HAL drivers code\&. "
.ti -1c
.RI "#define \fBMAC_ADDR1\fP   0U"
.br
.ti -1c
.RI "#define \fBMAC_ADDR2\fP   0U"
.br
.ti -1c
.RI "#define \fBMAC_ADDR3\fP   0U"
.br
.ti -1c
.RI "#define \fBMAC_ADDR4\fP   0U"
.br
.ti -1c
.RI "#define \fBMAC_ADDR5\fP   0U"
.br
.ti -1c
.RI "#define \fBETH_RX_BUF_SIZE\fP   ETH_MAX_PACKET_SIZE /* buffer size for receive               */"
.br
.ti -1c
.RI "#define \fBETH_TX_BUF_SIZE\fP   ETH_MAX_PACKET_SIZE /* buffer size for transmit              */"
.br
.ti -1c
.RI "#define \fBETH_RXBUFNB\fP   8U       /* 4 Rx buffers of size \fBETH_RX_BUF_SIZE\fP  */"
.br
.ti -1c
.RI "#define \fBETH_TXBUFNB\fP   4U       /* 4 Tx buffers of size \fBETH_TX_BUF_SIZE\fP  */"
.br
.ti -1c
.RI "#define \fBDP83848_PHY_ADDRESS\fP   0x01U"
.br
.ti -1c
.RI "#define \fBPHY_RESET_DELAY\fP   0x000000FFU"
.br
.ti -1c
.RI "#define \fBPHY_CONFIG_DELAY\fP   0x00000FFFU"
.br
.ti -1c
.RI "#define \fBPHY_READ_TO\fP   0x0000FFFFU"
.br
.ti -1c
.RI "#define \fBPHY_WRITE_TO\fP   0x0000FFFFU"
.br
.ti -1c
.RI "#define \fBPHY_BCR\fP   ((uint16_t)0x00)"
.br
.ti -1c
.RI "#define \fBPHY_BSR\fP   ((uint16_t)0x01)"
.br
.ti -1c
.RI "#define \fBPHY_RESET\fP   ((uint16_t)0x8000)"
.br
.ti -1c
.RI "#define \fBPHY_LOOPBACK\fP   ((uint16_t)0x4000)"
.br
.ti -1c
.RI "#define \fBPHY_FULLDUPLEX_100M\fP   ((uint16_t)0x2100)"
.br
.ti -1c
.RI "#define \fBPHY_HALFDUPLEX_100M\fP   ((uint16_t)0x2000)"
.br
.ti -1c
.RI "#define \fBPHY_FULLDUPLEX_10M\fP   ((uint16_t)0x0100)"
.br
.ti -1c
.RI "#define \fBPHY_HALFDUPLEX_10M\fP   ((uint16_t)0x0000)"
.br
.ti -1c
.RI "#define \fBPHY_AUTONEGOTIATION\fP   ((uint16_t)0x1000)"
.br
.ti -1c
.RI "#define \fBPHY_RESTART_AUTONEGOTIATION\fP   ((uint16_t)0x0200)"
.br
.ti -1c
.RI "#define \fBPHY_POWERDOWN\fP   ((uint16_t)0x0800)"
.br
.ti -1c
.RI "#define \fBPHY_ISOLATE\fP   ((uint16_t)0x0400)"
.br
.ti -1c
.RI "#define \fBPHY_AUTONEGO_COMPLETE\fP   ((uint16_t)0x0020)"
.br
.ti -1c
.RI "#define \fBPHY_LINKED_STATUS\fP   ((uint16_t)0x0004)"
.br
.ti -1c
.RI "#define \fBPHY_JABBER_DETECTION\fP   ((uint16_t)0x0002)"
.br
.ti -1c
.RI "#define \fBPHY_SR\fP   ((uint16_t)0x10U)"
.br
.ti -1c
.RI "#define \fBPHY_SPEED_STATUS\fP   ((uint16_t)0x0002U)"
.br
.ti -1c
.RI "#define \fBPHY_DUPLEX_STATUS\fP   ((uint16_t)0x0004U)"
.br
.ti -1c
.RI "#define \fBUSE_SPI_CRC\fP   0U"
.br
.ti -1c
.RI "#define \fBassert_param\fP(expr)   ((void)0U)"
.br
.RI "Include module's header file\&. "
.in -1c
.SH "Detailed Description"
.PP 
HAL configuration file\&. 


.PP
\fBAttention\fP
.RS 4

.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.SH "Macro Definition Documentation"
.PP 
.SS "#define assert_param(expr)   ((void)0U)"

.PP
Include module's header file\&. 
.SS "#define DP83848_PHY_ADDRESS   0x01U"

.SS "#define ETH_RX_BUF_SIZE   ETH_MAX_PACKET_SIZE /* buffer size for receive               */"

.SS "#define ETH_RXBUFNB   8U       /* 4 Rx buffers of size \fBETH_RX_BUF_SIZE\fP  */"

.SS "#define ETH_TX_BUF_SIZE   ETH_MAX_PACKET_SIZE /* buffer size for transmit              */"

.SS "#define ETH_TXBUFNB   4U       /* 4 Tx buffers of size \fBETH_TX_BUF_SIZE\fP  */"

.SS "#define HAL_CORTEX_MODULE_ENABLED"

.SS "#define HAL_DMA_MODULE_ENABLED"

.SS "#define HAL_EXTI_MODULE_ENABLED"

.SS "#define HAL_FLASH_MODULE_ENABLED"

.SS "#define HAL_GPIO_MODULE_ENABLED"

.SS "#define HAL_GPIO_MODULE_ENABLED"

.SS "#define HAL_MODULE_ENABLED"

.PP
This is the list of modules to be used in the HAL driver\&. 
.SS "#define HAL_PWR_MODULE_ENABLED"

.SS "#define HAL_RCC_MODULE_ENABLED"

.SS "#define HSE_STARTUP_TIMEOUT   100U"
Time out for HSE start up, in ms 
.SS "#define HSE_VALUE   8000000U"

.PP
Adjust the value of External High Speed oscillator (HSE) used in your application\&. This value is used by the RCC HAL module to compute the system frequency (when HSE is used as system clock source, directly or through the PLL)\&. Value of the External oscillator in Hz 
.SS "#define HSI_VALUE   8000000U"

.PP
Internal High Speed oscillator (HSI) value\&. This value is used by the RCC HAL module to compute the system frequency (when HSI is used as system clock source, directly or through the PLL)\&. Value of the Internal oscillator in Hz 
.SS "#define LSE_STARTUP_TIMEOUT   5000U"
Time out for LSE start up, in ms 
.SS "#define LSE_VALUE   32768U"

.PP
External Low Speed oscillator (LSE) value\&. This value is used by the UART, RTC HAL module to compute the system frequency\&. < Value of the Internal Low Speed oscillator in Hz The real value may vary depending on the variations in voltage and temperature\&. Value of the External oscillator in Hz 
.SS "#define LSI_VALUE   40000U"

.PP
Internal Low Speed oscillator (LSI) value\&. LSI Typical Value in Hz 
.SS "#define MAC_ADDR0   2U"

.PP
Uncomment the line below to expanse the 'assert_param' macro in the HAL drivers code\&. 
.SS "#define MAC_ADDR1   0U"

.SS "#define MAC_ADDR2   0U"

.SS "#define MAC_ADDR3   0U"

.SS "#define MAC_ADDR4   0U"

.SS "#define MAC_ADDR5   0U"

.SS "#define PHY_AUTONEGO_COMPLETE   ((uint16_t)0x0020)"
Auto-Negotiation process completed 
.br
 
.SS "#define PHY_AUTONEGOTIATION   ((uint16_t)0x1000)"
Enable auto-negotiation function 
.br
 
.SS "#define PHY_BCR   ((uint16_t)0x00)"
Transceiver Basic Control Register 
.br
 
.SS "#define PHY_BSR   ((uint16_t)0x01)"
Transceiver Basic Status Register 
.br
 
.SS "#define PHY_CONFIG_DELAY   0x00000FFFU"

.SS "#define PHY_DUPLEX_STATUS   ((uint16_t)0x0004U)"
PHY Duplex mask 
.br
 
.SS "#define PHY_FULLDUPLEX_100M   ((uint16_t)0x2100)"
Set the full-duplex mode at 100 Mb/s 
.SS "#define PHY_FULLDUPLEX_10M   ((uint16_t)0x0100)"
Set the full-duplex mode at 10 Mb/s 
.br
 
.SS "#define PHY_HALFDUPLEX_100M   ((uint16_t)0x2000)"
Set the half-duplex mode at 100 Mb/s 
.SS "#define PHY_HALFDUPLEX_10M   ((uint16_t)0x0000)"
Set the half-duplex mode at 10 Mb/s 
.br
 
.SS "#define PHY_ISOLATE   ((uint16_t)0x0400)"
Isolate PHY from MII 
.br
 
.SS "#define PHY_JABBER_DETECTION   ((uint16_t)0x0002)"
Jabber condition detected 
.br
 
.SS "#define PHY_LINKED_STATUS   ((uint16_t)0x0004)"
Valid link established 
.br
 
.SS "#define PHY_LOOPBACK   ((uint16_t)0x4000)"
Select loop-back mode 
.SS "#define PHY_POWERDOWN   ((uint16_t)0x0800)"
Select the power down mode 
.br
 
.SS "#define PHY_READ_TO   0x0000FFFFU"

.SS "#define PHY_RESET   ((uint16_t)0x8000)"
PHY Reset 
.SS "#define PHY_RESET_DELAY   0x000000FFU"

.SS "#define PHY_RESTART_AUTONEGOTIATION   ((uint16_t)0x0200)"
Restart auto-negotiation function 
.br
 
.SS "#define PHY_SPEED_STATUS   ((uint16_t)0x0002U)"
PHY Speed mask 
.br
 
.SS "#define PHY_SR   ((uint16_t)0x10U)"
PHY status register Offset 
.br
 
.SS "#define PHY_WRITE_TO   0x0000FFFFU"

.SS "#define PREFETCH_ENABLE   1U"

.SS "#define TICK_INT_PRIORITY   0U"
tick interrupt priority (lowest by default) 
.br
 
.SS "#define USE_HAL_ADC_REGISTER_CALLBACKS   0U /* ADC register callback disabled       */"

.SS "#define USE_HAL_CAN_REGISTER_CALLBACKS   0U /* CAN register callback disabled       */"

.SS "#define USE_HAL_CEC_REGISTER_CALLBACKS   0U /* CEC register callback disabled       */"

.SS "#define USE_HAL_DAC_REGISTER_CALLBACKS   0U /* DAC register callback disabled       */"

.SS "#define USE_HAL_ETH_REGISTER_CALLBACKS   0U /* ETH register callback disabled       */"

.SS "#define USE_HAL_HCD_REGISTER_CALLBACKS   0U /* HCD register callback disabled       */"

.SS "#define USE_HAL_I2C_REGISTER_CALLBACKS   0U /* I2C register callback disabled       */"

.SS "#define USE_HAL_I2S_REGISTER_CALLBACKS   0U /* I2S register callback disabled       */"

.SS "#define USE_HAL_IRDA_REGISTER_CALLBACKS   0U /* IRDA register callback disabled      */"

.SS "#define USE_HAL_MMC_REGISTER_CALLBACKS   0U /* MMC register callback disabled       */"

.SS "#define USE_HAL_NAND_REGISTER_CALLBACKS   0U /* NAND register callback disabled      */"

.SS "#define USE_HAL_NOR_REGISTER_CALLBACKS   0U /* NOR register callback disabled       */"

.SS "#define USE_HAL_PCCARD_REGISTER_CALLBACKS   0U /* PCCARD register callback disabled    */"

.SS "#define USE_HAL_PCD_REGISTER_CALLBACKS   0U /* PCD register callback disabled       */"

.SS "#define USE_HAL_RTC_REGISTER_CALLBACKS   0U /* \fBRTC\fP register callback disabled       */"

.SS "#define USE_HAL_SD_REGISTER_CALLBACKS   0U /* SD register callback disabled        */"

.SS "#define USE_HAL_SMARTCARD_REGISTER_CALLBACKS   0U /* SMARTCARD register callback disabled */"

.SS "#define USE_HAL_SPI_REGISTER_CALLBACKS   0U /* SPI register callback disabled       */"

.SS "#define USE_HAL_SRAM_REGISTER_CALLBACKS   0U /* SRAM register callback disabled      */"

.SS "#define USE_HAL_TIM_REGISTER_CALLBACKS   0U /* TIM register callback disabled       */"

.SS "#define USE_HAL_UART_REGISTER_CALLBACKS   0U /* UART register callback disabled      */"

.SS "#define USE_HAL_USART_REGISTER_CALLBACKS   0U /* USART register callback disabled     */"

.SS "#define USE_HAL_WWDG_REGISTER_CALLBACKS   0U /* \fBWWDG\fP register callback disabled      */"

.SS "#define USE_RTOS   0U"

.SS "#define USE_SPI_CRC   0U"

.SS "#define VDD_VALUE   3300U"

.PP
This is the HAL system configuration section\&. Value of VDD in mv 
.SH "Author"
.PP 
Generated automatically by Doxygen for lcd_display from the source code\&.
